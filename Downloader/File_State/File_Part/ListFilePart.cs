/*
* ============================================================================
* THIS CODE IS GENERATED BY 'ClasseCodeGenerator'
* ZEMMOURI Mohamed m.zemmouri@gmail.com
* ============================================================================
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml.Serialization;
using System.IO;
using System.Windows.Forms;
using ZEMMOURI_Downloader.File_SourceDestination;

namespace ZEMMOURI_Downloader.File_State.File_Part
{

    /// <summary>
    /// Describes a List of Files to Download, it is a List of FilePart
    /// </summary>
    public class ListFilePart
    {
        #region Constructor

        /// <summary>
        /// Constructor of ListFilePart
        /// </summary>
        public ListFilePart()
        {
        }

        #endregion

        #region Variables


        /// <summary>
        /// List of FilePart
        /// </summary>
        private List<FilePart> items = new List<FilePart>();

        /// <summary>
        /// Counter to set the ID for Files
        /// </summary>
        private uint CurrentID = 1;

        #endregion

        #region Proprieties


        /// <summary>
        /// List of FilePart
        /// </summary>
        [XmlArrayAttribute("Items")]
        public List<FilePart> Items
        {
            get
            {
                return items;
            }
            set
            {
                items = value;
            }
        }

        #endregion

        #region Indexor

        /// <summary>
        /// Indexor of ListFilePart
        /// </summary>
        /// <param name="i">Item Ranke</param>
        /// <returns>FilePart</returns>
        public FilePart this[int i]
        {
            get
            {
                return items[i];
            }
            set
            {
                items[i] = value;
            }
        }

        #endregion

        #region Methodes
        
        /// <summary>
        /// Add FilePart to the list
        /// </summary>
        /// <param name="StartPosition">The position of the begging of the Part in the File</param>
        /// <param name="EndPosition">The position of the end of the Part in the File</param>
        public void Add( int StartPosition, int EndPosition)
        {
            FilePart FilePart = new FilePart(CurrentID, StartPosition, EndPosition);
            items.Add(FilePart);
            CurrentID++;
        }
        
        #endregion

        #region XmlSerialization

        /// <summary>
        /// Export a List of FilePart To an XML File
        /// </summary>
        /// <param name="list">List of FilePart</param>
        /// <param name="XMLFileName">The path of the Destination XML File</param>
        static public void WriteToXML(ListFilePart list, String XMLFileName)
        {
            XmlSerializer serializer = new XmlSerializer(typeof(ListFilePart));
            TextWriter writer = new StreamWriter(XMLFileName);
            serializer.Serialize(writer, list);
            writer.Close();
        }

        /// <summary>
        /// Import a List of FilePart from an XML File
        /// </summary>
        /// <param name="XMLFileName">The path of the XML File</param>
        /// <returns>ListFilePart</returns>
        static public ListFilePart ReadFromXML(String XMLFileName)
        {
            XmlSerializer serializer = new XmlSerializer(typeof(ListFilePart));
            FileStream fs = new FileStream(XMLFileName, FileMode.Open);
            return (ListFilePart)serializer.Deserialize(fs);
        }

        #endregion

    }
}